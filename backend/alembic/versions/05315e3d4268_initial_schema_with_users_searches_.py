"""Initial schema with users, searches, tweets, sentiments, saved_searches, and reports tables

Revision ID: 05315e3d4268
Revises: 
Create Date: 2025-10-21 01:05:44.893870

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '05315e3d4268'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.Text(), nullable=True),
    sa.Column('tier', sa.String(length=20), nullable=True),
    sa.Column('credits_remaining', sa.Integer(), nullable=True),
    sa.Column('credits_reset_date', sa.DateTime(), nullable=True),
    sa.Column('oauth_provider', sa.String(length=50), nullable=True),
    sa.Column('oauth_id', sa.String(length=255), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('saved_searches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('alert_enabled', sa.Boolean(), nullable=True),
    sa.Column('alert_threshold', sa.Float(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('searches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_tweets', sa.Integer(), nullable=True),
    sa.Column('sentiment_summary', sa.JSON(), nullable=True),
    sa.Column('emotion_summary', sa.JSON(), nullable=True),
    sa.Column('entities', sa.JSON(), nullable=True),
    sa.Column('time_range', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('search_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('format', sa.String(length=10), nullable=False),
    sa.Column('file_url', sa.Text(), nullable=True),
    sa.Column('file_size_kb', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['search_id'], ['searches.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tweets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('search_id', sa.UUID(), nullable=False),
    sa.Column('tweet_id', sa.String(length=50), nullable=True),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('author_username', sa.String(length=100), nullable=True),
    sa.Column('author_name', sa.String(length=100), nullable=True),
    sa.Column('created_at_twitter', sa.DateTime(), nullable=True),
    sa.Column('retweet_count', sa.Integer(), nullable=True),
    sa.Column('like_count', sa.Integer(), nullable=True),
    sa.Column('reply_count', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['search_id'], ['searches.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tweet_id')
    )
    op.create_table('sentiments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tweet_id', sa.UUID(), nullable=False),
    sa.Column('model_name', sa.String(length=50), nullable=False),
    sa.Column('sentiment_label', sa.String(length=20), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('is_sarcastic', sa.Boolean(), nullable=True),
    sa.Column('sarcasm_score', sa.Float(), nullable=True),
    sa.Column('emotions', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tweet_id'], ['tweets.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sentiments')
    op.drop_table('tweets')
    op.drop_table('reports')
    op.drop_table('searches')
    op.drop_table('saved_searches')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
